with "switches";

project SXML
is
   type Mode_Type is ("strict", "sloppy", "debug");
   Mode : Mode_Type := external ("Mode", "strict");

   type Callgraph_Type is ("none", "su", "su_da");
   Callgraph : Callgraph_Type := external ("callgraph", "none");

   Callgraph_Switches := ();
   case Callgraph is
      when "none" =>
         Callgraph_Switches := ();

      when "su" =>
         Callgraph_Switches := ("-fcallgraph-info=su");

      when "su_da" =>
         Callgraph_Switches := ("-fcallgraph-info=su,da");
   end case;

   for Source_Dirs use ("src", "tests/debug");
   for Object_Dir use "obj";

   for Library_Name use "sxml";
   for Library_Kind use "dynamic";
   for Library_Dir use "obj/adalib";

   package Builder is
      case Mode is
         when "strict" =>
            for Global_Configuration_Pragmas use "default.adc";
         when "debug" =>
            for Global_Configuration_Pragmas use "debug.adc";
         when others =>
            null;
      end case;
   end Builder;

   package Compiler is
      case Mode is
         when "strict" =>
            for Default_Switches ("Ada") use Switches.Compiler_Switches & Callgraph_Switches;
         when "debug" =>
            for Default_Switches ("Ada") use Switches.Compiler_Switches & Switches.Compiler_Debug_Switches & Callgraph_Switches;
         when others =>
            null;
      end case;
   end Compiler;

   package Check is
      for Default_Switches ("Ada") use ("-rules", "-from=rules.gck");
   end Check;

   package Stack is
      for Switches use ("-Wa", "-a", "-p");
   end Stack;

end SXML;
